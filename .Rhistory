install.packages("data.table")
library(data.able)
library(data.table)
replace(activity[1, 1], byinterval[1, ] , "toast")
i <- 1
for (i in count(activity))
if (is.na(activity[i, 1])) {
listindex <- unlist(byinterval[which(byinterval$interval == activity[i, 3]), 1])
valueindex <- unlist(byinterval[which(list == activity[i, 3]), 2])
replace(activity[i, 1], listindex, valueindex)
}
i <- i + 1
View(activity)
replace(activity[1, 1], byinterval[1, ], 1)
replace(activity[1, 1], unlist(byinterval[1, ]), 1)
View(activity)
replace(activity[1, 1], unlist(byinterval[1, ]), "toast")
View(activity)
?lmFun
??lmFun
impute(activity)
count(activity)
listindex <- unlist(byinterval[which(byinterval$interval == activity[i, 3]), 1])
listindex <- unlist(byinterval[which(byinterval$interval == activity[1, 3]), 1])
listindex
valueindex <- unlist(byinterval[which(list == activity[1, 3]), 2])
valueindex
valueindex <- unlist(byinterval[which(list == activity[, 3]), 2])
valueindex
i <- 1
for (i in count(activity))
if (is.na(activity[i, 1])) {
listindex <- unlist(byinterval[which(byinterval$interval == activity[i, 3]), 1])
valueindex <- unlist(byinterval[which(listindex == activity[i, 3]), 2])
replace(activity[i, 1], listindex, valueindex)
}
i <- i + 1
View(activity)
listindex <- unlist(byinterval[which(byinterval$interval == activity[, 3]), 1])
listindex
listindex <- unlist(byinterval[which(byinterval$interval == activity[1, 3]), 1])
listindex
listindex <- as.integer(byinterval[which(byinterval$interval == activity[1, 3]), 1])
listindex
valueindex <- as.numeric(byinterval[which(listindex == activity[1, 3]), 2])
valueindex
i <- 1
for (i in count(activity))
if (is.na(activity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == activity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == activity[i, 3]), 2])
replace(activity[i, 1], listindex, valueindex)
}
i <- i + 1
View(activity)
View(activity)
replace(activity, 1, 1)
View(activity)
i <- 1
for (i in count(activity))
if (is.na(activity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == activity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == activity[i, 3]), 2])
activity <- replace(activity[i, 1], listindex, valueindex)
}
i <- i + 1
View(x)
activity <- read.csv("~/R/activity.csv")
replace(activity, 2, 1)
i <- 1
for (i in count(activity))
if (is.na(activity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == activity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == activity[i, 3]), 2])
newactivity <- replace(activity[i, 1], 1, valueindex)
}
i <- i + 1
replace(activity, 2, 1)
replace(activity, 3, 1)
replace(activity[which(is.na(activity[,1]]), 1, as.numeric(byinterval[which(listindex == activity[i, 3]), 2]))
View(badrows)
impute()
impute(badrows)
impute(badrows, 1, 1)
?impute
impute(badrows, ini=mean)
sapply(badrows, class)
impute(badrows[,1], ini=mean)
impute(badrows, ini=mean)
impute(badrows, ini=mean, guess)
impute(badrows, ini=mean, ini = guess)
impute(badrows)
View(byinterval)
mutate(badrows, impsteps = byinterval[which(byinterval$interval == badrows$interval), 2])
mutate(badrows, impsteps = as.numeric(byinterval[which(byinterval$interval == badrows$interval), 2]))
View(badrows)
mutate(badrows, steps = as.numeric(byinterval[which(byinterval$interval == badrows$interval), 2]))
mutate(badrows, steps = unlist(as.numeric(byinterval[which(byinterval$interval == badrows$interval), 2])))
byinterval[which(byinterval$interval == badrows$interval), 2]
View(activity)
replace(badrows, 1, "toast")
View(badrows)
View(activity)
replace(activity, which(is.na(steps), "toast")
)
replace(activity, which(is.na(steps), 1)
)
?replace
which(is.na(steps))
?countif
count(if(is.na(steps)))
count(if (is.na(steps)))
count(if (is.na(steps))
)
count(which(is.na(steps)))
count(activity[which(is.na(steps)), ])
count(activity[which(is.na(activity$steps)), ])
replace(activity$steps, activity[which(is.na(activity$steps)), ], 1)
replace(activity, activity[which(is.na(activity$steps)), ], 1)
with(activity, impute(steps, 1))
with(activity, impute(activity$steps, 1))
impute(activity, 1))
impute(activity, 1)
impute(activity$steps, 1)
?impute
impute(activity, lmFun = mean, cFun = 1)
impute(activity, lmFun = mean, cFun = "1")
impute(activity, lmFun = mean, cFun = "random")
impute(activity, lmFun = mean, cFun = "lassoC")
impute(activity, lmFun = "lassoR", cFun = "lassoC")
maybe <- impute(activity, lmFun = "lassoR", cFun = "lassoC")
maybe
?lassoR
lassoR(byinterval$interval, byinterval$avg)
testactivity <- activity
testactivity[1,1] = "toast"
View(testactivity)
listindex <- as.integer(byinterval[which(byinterval$interval == activity[1, 3]), 1])
listindex
as.integer(byinterval[which(byinterval$interval == activity[2, 3]), 1])
as.integer(byinterval[which(byinterval$interval == activity[3, 3]), 1])
as.numeric(byinterval[which(listindex == activity[i, 3]), 2])
as.numeric(byinterval[which(listindex == activity[1, 3]), 2])
as.numeric(byinterval[which(listindex == activity[2, 3]), 2])
testactivity[1,1] <- "toasty"
View(testactivity)
impactivity <- activity
i <- 1
for (i in count(activity))
if (is.na(activity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == activity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == activity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
i <- i + 1
View(impactivity)
impactivity <- activity
i <- 1
for (i in count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
i <- i + 1
View(impactivity)
is.na(impactivity[1, 1]
)
as.integer(byinterval[which(byinterval$interval == impactivity[1, 3]), 1])
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[1, 3]), 1])
listindex
valueindex <- as.numeric(byinterval[which(listindex == impactivity[1, 3]), 2])
valueindex
impactivity[1, 1] <- valueindex
View(impactivity)
impactivity <- activity
i <- 1
for (i in count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
i <- i + 1
View(impactivity)
?while
impactivity <- activity
i <- 1
for (i in count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
View(impactivity)
impactivity <- activity
for (i in count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
View(impactivity)
impactivity <- activity
for (i in 1:count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
impactivity <- activity
while (i <= count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
View(impactivity)
impactivity <- activity
i <- 1
while (i <= count(impactivity))
if (is.na(impactivity[i, 1])) {
listindex <- as.integer(byinterval[which(byinterval$interval == impactivity[i, 3]), 1])
valueindex <- as.numeric(byinterval[which(listindex == impactivity[i, 3]), 2])
impactivity[i, 1] <- valueindex
}
View(impactivity)
i <- 1
while (i <= count(badrows))
listindex <- as.integer(byinterval[which(byinterval$interval == badrows[i, 3]), 1])
View(badrows)
View(badrows)
View(byinterval)
maybe <- outer_join(badrows, byinterval, by = "interval")
library(dplyr)
maybe <- outer_join(badrows, byinterval, by = "interval")
?outer_join
maybe <- inner_join(badrows, byinterval, by = "interval")
View(maybe)
maybe <- inner_join(byinterval, badrows, by = "interval")
View(maybe)
maybe <- left_join(byinterval, badrows, by = "interval")
View(maybe)
maybe <- right_join(byinterval, badrows, by = "interval")
View(maybe)
View(badrows)
View(maybe)
View(badrows)
View(maybe)
maybe <- left_join(byinterval, badrows, by = "interval")
View(maybe)
maybe <- left_join(badrows, byinterval, by = "interval")
View(maybe)
derp <- select(maybe, avg, date, interval)
View(derp)
goodrows <- activity[!badrows]
goodrows <- activity[!badrows, ]
goodrows <- activity[!is.na(activity$steps), ]
goodrows <- activity[!is.na(activity$steps), ]
temp <- left_join(badrows, byinterval, by = "interval")
improws <- select(temp, avg, date, interval)
View(improws)
impactivity <- bind_rows(goodrows, improws)
View(impactivity)
maybe <- impactivity %>% arrange(date) %>% arrange(interval)
View(maybe)
impactivity <- bind_rows(goodrows, improws)
View(impactivity)
View(improws)
improws <- rename(improws, avg = steps)
improws <- rename(improws, steps = avg)
View(improws)
improws <- rename(improws, steps = avg)
impactivity <- bind_rows(goodrows, improws)
View(impactivity)
maybe <- impactivity %>% arrange(date) %>% arrange(interval)
View(maybe)
maybe <- impactivity %>% arrange(interval) %>% arrange(date)
View(maybe)
impactivity <- bind_rows(goodrows, improws) %>%
arrange(interval) %>%
arrange(date)
View(impactivity)
if (!file.exists("~/R/repdata-data-activity.zip")) {
fileurl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(fileurl, "~/R/repdata-data-activity.zip")
unzip("repdata-data-activity.zip")
}
activity <- read.csv("~/R/activity.csv")
require(dplyr)
require(ggplot2)
totalbyday <- activity %>%
group_by(date) %>%
summarise(total = sum(steps))
ggplot(totalbyday, aes(x = total)) +
geom_histogram(binwidth = 1000, aes(fill = ..count..)) +
labs(title = "Steps per Day", x = "Total Steps", y = "Count")
mean <- format(mean(totalbyday$total, na.rm = TRUE), digits = 6)
median <- median(totalbyday$total, na.rm = TRUE)
byinterval <- activity %>%
group_by(interval) %>%
summarise(avg = mean(steps, na.rm = TRUE))
ggplot(byinterval, aes(x = interval, y = avg)) +
geom_line(aes(col = avg)) +
scale_color_gradient(low = "orange", high = "red") +
labs(title = "Average Steps by Interval", x = "Interval", y = "Average Steps")
busiestinterval <- byinterval %>%
filter(avg == max(avg))
View(busiestinterval)
interval <- as.integer(busiestinterval[1])
steps <- as.integer(busiestinterval[2])
badrows <- activity %>%
filter(is.na(steps))
goodrows <- activity[!is.na(activity$steps), ]
temp <- left_join(badrows, byinterval, by = "interval")
improws <- select(temp, avg, date, interval) %>%
rename(improws, steps = avg)
?select
temp <- left_join(badrows, byinterval, by = "interval")
improws <- select(temp, step = avg, date, interval)
View(improws)
improws <- select(temp, steps = avg, date, interval)
View(improws)
impactivity <- bind_rows(goodrows, improws) %>%
arrange(interval) %>%
arrange(date)
View(impactivity)
imptotalbyday <- impactivity %>%
group_by(date) %>%
summarise(total = sum(steps))
ggplot(imptotalbyday, aes(x = total)) +
geom_histogram(binwidth = 1000, aes(fill = ..count..)) +
labs(title = "Steps per Day", x = "Total Steps", y = "Count")
install.packages("gridExtra")
library(gridExtra)
?weekdays
View(impactivity)
sapply(impactivity, class)
maybe <- as.POSIXct(impactivity$date)
maybe
class(maybe)
impactivity$date <- as.POSIXct(impactivity$date)
View(impactivity)
sapply(impactivity, class)
weekdays(impactivity$date)
impactivity %>%
mutate(weekday = weekdays(impactivity$date))
impactivity <- impactivity %>%
mutate(weekday = weekdays(impactivity$date))
View(impactivity)
levels(impactivity$weekday)
sapply(impactivity, class)
impactivity <- impactivity %>%
mutate(weekday = as.factor(weekdays(impactivity$date)))
View(impactivity)
View(impactivity)
levels(impactivity$weekday)
?factor
levels(impactivity$weekday) <- c(FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, FALSE)
glimpse(impactivity$weekday)
View(impactivity)
levels(impactivity$weekday)
summary(impactivity$weekday)
levels(impactivity$weekday) <- c(TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE)
summary(impactivity$weekday)
impactivity <- impactivity %>%
mutate(weekday = weekdays(impactivity$date))
View(impactivity)
levels(impactivity$weekday)
impactivity <- impactivity %>%
mutate(weekday = as.factor(weekdays(impactivity$date)))
levels(impactivity$weekday)
levels(impactivity$weekday) <- c(TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, TRUE)
summary(impactivity$weekday)
impactivity <- impactivity %>%
mutate(weekday = as.factor(weekdays(impactivity$date)))
levels(impactivity$weekday)
levels(impactivity$weekday) <- c(weekday, weekday, weekend, weekend, weekday, weekday, weekday)
levels(impactivity$weekday) <-
c("weekday", "weekday", "weekend", "weekend", "weekday", "weekday", "weekday")
levels(impactivity$weekday)
levels(impactivity$weekday)
summary(impactivity$weekday)
impactivity <- impactivity %>%
mutate(weekday = as.factor(weekdays(impactivity$date)))
summary(impactivity$weekday)
levels(impactivity$weekday) <-
c("weekday", "weekday", "weekend", "weekend", "weekday", "weekday", "weekday")
summary(impactivity$weekday)
impbyinterval <- impactivity %>%
group_by(interval) %>%
summarise(avg = mean(steps))
View(impbyinterval)
impbyinterval <- impactivity %>%
group_by(weekday) %>%
group_by(interval) %>%
summarise(avg = mean(steps))
View(impbyinterval)
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps))
View(weekdaybyinterval)
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps))
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps))
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps))
View(weekdaybyinterval)
View(weekendbyinterval)
mutate(weekendbyinterval, weekday = "weekend")
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps))
mutate(weekendbyinterval, weekday = "weekday")
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps)) %>%
mutate(weekendbyinterval, weekday = "weekday")
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = "weekday")
View(weekdaybyinterval)
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = "weekend")
View(weekendbyinterval)
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday)
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = as.factor("weekday"))
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = as.factor("weekend"))
View(weekdaybyinterval)
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = as.factor("weekend"))
weekdaybyinterval <- bind_rows(weekdaybyinterval, weekendbyinterval)
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = as.factor("weekday"))
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = as.factor("weekend"))
summarybyinterval <- bind_rows(weekdaybyinterval, weekendbyinterval)
summarybyinterval$weekday <- as.factor(summarybyinterval$weekday)
summary(weekdaybyinterval$weekday)
summary(summarybyinterval$weekday)
weekdaybyinterval <- impactivity %>%
filter(weekday == "weekday") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = "weekday")
weekendbyinterval <- impactivity %>%
filter(weekday == "weekend") %>%
group_by(interval) %>%
summarise(avg = mean(steps), weekday = "weekend")
summarybyinterval <- bind_rows(weekdaybyinterval, weekendbyinterval)
summarybyinterval$weekday <- as.factor(summarybyinterval$weekday)
summary(summarybyinterval)
View(summarybyinterval)
ggplot(summarybyinterval, aes(x = interval, y = avg)) +
geom_line(aes(col = avg)) +
scale_color_gradient(low = "orange", high = "red") +
facet_wrap(~ weekday)
labs(title = "Average Steps by Interval", x = "Interval", y = "Average Steps")
ggplot(summarybyinterval, aes(x = interval, y = avg)) +
geom_line(aes(col = avg)) +
scale_color_gradient(low = "orange", high = "red") +
facet_wrap(~ weekday) +
labs(title = "Average Steps by Interval", x = "Interval", y = "Average Steps")
ggplot(summarybyinterval, aes(x = interval, y = avg)) +
geom_line(aes(col = avg)) +
scale_color_gradient(low = "orange", high = "red") +
facet_wrap(weekday ~) +
labs(title = "Average Steps by Interval", x = "Interval", y = "Average Steps")
gplot(summarybyinterval, aes(x = interval, y = avg)) +
geom_line(aes(col = avg)) +
scale_color_gradient(low = "orange", high = "red") +
facet_wrap(weekday ~) +
labs(title = "Average Steps by Interval", x = "Interval", y = "Average Steps")
ggplot(summarybyinterval, aes(x = interval, y = avg)) +
geom_line(aes(col = avg)) +
scale_color_gradient(low = "orange", high = "red") +
facet_wrap(~ weekday, ncol = 1) +
labs(title = "Average Steps by Interval", x = "Interval", y = "Average Steps")
library(knitr)
?knit2html
knit2html("~/GitHub/RepData_PeerAssessment1.Rmd")
setwd("~/GitHub/RepData_PeerAssessment1")
list.files(getwd())
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
